{"version":3,"file":"store.umd.js","sources":["../../../modules/store/src/directives/routerLinkActiveMatch.ts","../../../modules/store/src/directives/ngLet.ts","../../../modules/store/src/operators/untilDestroy.ts","../../../modules/store/src/operators/pluck.ts","../../../modules/store/src/decorators/dispatch.ts","../../../modules/store/src/decorators/select.ts","../../../modules/store/src/decorators/pluck.ts","../../../modules/store/src/decorators/ngrx-select.module.ts"],"sourcesContent":["import {\n  Directive,\n  Input,\n  NgModule,\n  OnDestroy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators/filter';\nimport { combineLatest } from 'rxjs/operators/combineLatest';\n\nimport { untilDestroy } from '@ngrx-utils/store';\nimport { Subject } from 'rxjs/Subject';\n\nexport interface MatchExp {\n  [classes: string]: string;\n}\n\n@Directive({\n  selector: '[routerLinkActiveMatch]'\n})\nexport class RouterLinkActiveMatch implements OnDestroy, OnChanges {\n  private _curRoute = '';\n  private _matchExp: MatchExp = {};\n  private _onChangesHook = new Subject<MatchExp>();\n\n  @Input('routerLinkActiveMatch')\n  set routerLinkActiveMatch(v: MatchExp) {\n    if (v && typeof v === 'object') {\n      this._matchExp = v;\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof v}' of value for ` +\n          `input of routerLinkActiveMatch directive, expected 'object'`\n      );\n    }\n  }\n\n  constructor(router: Router, private _renderer: Renderer2, private _ngEl: ElementRef) {\n    router.events\n      .pipe(\n        filter(e => e instanceof NavigationEnd),\n        combineLatest(this._onChangesHook),\n        untilDestroy(this)\n      )\n      .subscribe(([e]) => {\n        this._curRoute = (e as NavigationEnd).urlAfterRedirects;\n\n        this._updateClass(this._matchExp);\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['routerLinkActiveMatch']) {\n      this._onChangesHook.next(changes['routerLinkActiveMatch'].currentValue);\n    }\n  }\n\n  private _updateClass(v: MatchExp): void {\n    Object.keys(v).forEach(cls => {\n      if (v[cls] && typeof v[cls] === 'string') {\n        const regexp = new RegExp(v[cls]);\n        if (this._curRoute.match(regexp)) {\n          this._toggleClass(cls, true);\n        } else {\n          this._toggleClass(cls, false);\n        }\n      } else {\n        throw new TypeError(\n          `Could not convert match value to Regular Expression. ` +\n            `Unexpected type '${typeof v[cls]}' for value of key '${cls}' ` +\n            `in routerLinkActiveMatch directive match expression, expected 'non-empty string'`\n        );\n      }\n    });\n  }\n\n  private _toggleClass(classes: string, enabled: boolean): void {\n    classes = classes.trim();\n\n    classes.split(/\\s+/g).forEach(cls => {\n      if (enabled) {\n        this._renderer.addClass(this._ngEl.nativeElement, cls);\n      } else {\n        this._renderer.removeClass(this._ngEl.nativeElement, cls);\n      }\n    });\n  }\n\n  ngOnDestroy() {}\n}\n\n@NgModule({\n  declarations: [RouterLinkActiveMatch],\n  exports: [RouterLinkActiveMatch]\n})\nexport class RouterLinkActiveMatchModule {}\n","import { NgModule, Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class NgLetContext {\n  $implicit: any = null;\n  ngLet: any = null;\n}\n\n@Directive({\n  selector: '[ngLet]'\n})\nexport class NgLetDirective {\n  private _context = new NgLetContext();\n\n  @Input()\n  set ngLet(value: any) {\n    this._context.$implicit = this._context.ngLet = value;\n  }\n\n  constructor(_vcr: ViewContainerRef, _templateRef: TemplateRef<NgLetContext>) {\n    _vcr.createEmbeddedView(_templateRef, this._context);\n  }\n}\n\n@NgModule({\n  declarations: [NgLetDirective],\n  exports: [NgLetDirective]\n})\nexport class NgLetModule {}\n","import { Observable } from 'rxjs/Observable';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { MonoTypeOperatorFunction } from 'rxjs/interfaces';\n\n// create a symbol identify the observable I add to\n// the component so it doesn't conflict with anything.\n// I need this so I'm able to add the desired behaviour to the component.\nexport const destroy$ = Symbol('destroy$');\n\n/**\n * An operator that takes until destroy it takes a components this a parameter\n * returns a pipeable RxJS operator.\n */\nexport const untilDestroy = <T>(component: any): MonoTypeOperatorFunction<T> => {\n  if (component[destroy$] === undefined) {\n    // only hookup each component once.\n    addDestroyObservableToComponent(component);\n  }\n\n  // pipe in the takeUntil destroy$ and return the source unaltered\n  return takeUntil<T>(component[destroy$]);\n};\n\n/**\n * @internal\n */\nexport function addDestroyObservableToComponent(component: any) {\n  component[destroy$] = new Observable<void>(observer => {\n    // keep track of the original destroy function,\n    // the user might do something in there\n    const orignalDestroy = component.ngOnDestroy;\n    if (!orignalDestroy) {\n      // Angular does not support dynamic added destroy methods\n      // so make sure there is one.\n      throw new Error('untilDestroy operator needs the component to have an ngOnDestroy method');\n    }\n    // replace the ngOndestroy\n    component.ngOnDestroy = () => {\n      // fire off the destroy observable\n      observer.next();\n      // complete the observable\n      observer.complete();\n      // and at last, call the original destroy\n      orignalDestroy.call(component);\n    };\n    // return cleanup function.\n    return (_: any) => (component[destroy$] = undefined);\n  });\n}\n","import { OperatorFunction } from 'rxjs/interfaces';\nimport { pluck as pluckOperator } from 'rxjs/operators/pluck';\n\n/**\n * Strong typed pluck function to replace\n * rxjs/operators/pluck\n *\n * Accept max 4 properties name\n */\nexport function pluck<A, B extends keyof A>(s1: B): OperatorFunction<A, A[B]>;\nexport function pluck<A, B extends keyof A, C extends keyof A[B]>(\n  s1: B,\n  s2: C\n): OperatorFunction<A, A[B][C]>;\nexport function pluck<A, B extends keyof A, C extends keyof A[B], D extends keyof A[B][C]>(\n  s1: B,\n  s2: C,\n  s3: D\n): OperatorFunction<A, A[B][C][D]>;\nexport function pluck<\n  A,\n  B extends keyof A,\n  C extends keyof A[B],\n  D extends keyof A[B][C],\n  E extends keyof A[B][C][D]\n>(s1: B, s2: C, s3: D, s4: E): OperatorFunction<A, A[B][C][D][E]>;\nexport function pluck<\n  A,\n  B extends keyof A,\n  C extends keyof A[B],\n  D extends keyof A[B][C],\n  E extends keyof A[B][C][D],\n  F extends keyof A[B][C][D][E]\n>(s1: B, s2: C, s3: D, s4: E, s5: F): OperatorFunction<A, A[B][C][D][E][F]>;\nexport function pluck<\n  A,\n  B extends keyof A,\n  C extends keyof A[B],\n  D extends keyof A[B][C],\n  E extends keyof A[B][C][D],\n  F extends keyof A[B][C][D][E],\n  G extends keyof A[B][C][D][E][F]\n>(s1: B, s2: C, s3: D, s4: E, s5: F, s6: G): OperatorFunction<A, A[B][C][D][E][F][G]>;\nexport function pluck<T, V>(...props: string[]): OperatorFunction<T, V> {\n  return pluckOperator<T, V>(...props);\n}\n","import { Action, Store } from '@ngrx/store';\n\nimport { NgrxSelect } from './ngrx-select.module';\n\nexport function Dispatch() {\n  return function(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n\n    if (typeof originalMethod !== 'function') {\n      throw new TypeError(\n        `Unexpected type ${typeof originalMethod} of property ${propertyKey}, expected 'function'`\n      );\n    }\n\n    // editing the descriptor/value parameter\n    descriptor.value = function(...args: any[]) {\n      const source$ = NgrxSelect.store;\n      if (!source$) {\n        throw new Error('NgrxSelect not connected to store!');\n      }\n      // note usage of originalMethod here\n      const actions = originalMethod.apply(this, args);\n\n      if (Array.isArray(actions)) {\n        dispatch(source$, actions);\n      } else {\n        dispatch(source$, [actions]);\n      }\n      return actions;\n    };\n\n    // return edited descriptor as opposed to overwriting the descriptor\n    return descriptor;\n  };\n}\n\nfunction dispatch<T extends Action = Action>(source$: Store<any>, actions: T[]) {\n  actions.forEach(action => {\n    if (typeof action !== 'object' || (typeof action === 'object' && !('type' in action))) {\n      throw new TypeError(\n        `Unexpected action in method return type, expected object of type 'Action'`\n      );\n    }\n    source$.dispatch(action);\n  });\n}\n","import { Selector } from '@ngrx/store';\nimport { OperatorFunction } from 'rxjs/interfaces';\n\nimport { NgrxSelect } from './ngrx-select.module';\n\nexport function Select<A, B>(mapFn: Selector<A, B>): (target: any, name: string) => void;\nexport function Select<A, B, C>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E>(\n  mapFn: (state: A) => B,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H, I>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>,\n  op7: OperatorFunction<H, I>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H, I, J>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>,\n  op7: OperatorFunction<H, I>,\n  op8: OperatorFunction<I, J>\n): (target: any, name: string) => void;\nexport function Select<A, B, C>(\n  mapFn: Selector<A, B>,\n  ...ops: OperatorFunction<B, C>[]\n): (target: any, name: string) => void;\n\n/**\n * Select decorator act like pipe operator of Observable\n * except the first parameter is a selector to select a piece\n * of state from @ngrx/store and you won't be able to subscribe to it\n * @example\n * export class MyComponent {\n *   @Select(fromStore.getAuth, take(1))\n *   isAuth: Observable<boolean>\n * }\n */\nexport function Select<A, B>(\n  mapFn: ((state: A) => B),\n  ...operations: OperatorFunction<any, any>[]\n) {\n  return function(target: any, propertyKey: string): void {\n    if (typeof mapFn !== 'function') {\n      throw new TypeError(\n        `Unexpected type '${typeof mapFn}' in select operator, expected 'function'`\n      );\n    }\n\n    /**\n     * Get property descriptor for more precise define object property\n     */\n    const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);\n\n    if (delete target[propertyKey]) {\n      Object.defineProperty(target, propertyKey, {\n        ...descriptor,\n        get() {\n          const store = NgrxSelect.store;\n\n          if (!store) {\n            throw new Error('NgrxSelect not connected to store!');\n          }\n\n          const source$ = store.select(mapFn);\n\n          return source$.pipe.apply(source$, operations);\n        }\n      });\n    }\n  };\n}\n","import { pluck as pluckOperator } from 'rxjs/operators/pluck';\n\nimport { NgrxSelect } from './ngrx-select.module';\n\n/**\n * Provide an utility for select a piece of state from Root State.\n * Support shorthand syntax with 'dot' split property name and leave it empty\n * will use the component property name.\n * @example\n * export class MyComponent {\n *   @Pluck() prop1: Observable<any>\n *   @Pluck('feature.prop2') prop2: Observable<any>\n *   @Pluck('feature', 'prop3') prop3: Observable<any>\n * }\n */\nexport function Pluck(path?: string, ...paths: string[]) {\n  return function(target: any, propertyKey: string) {\n    let props: string[];\n\n    if (!path) {\n      path = propertyKey;\n    }\n\n    if (typeof path !== 'string') {\n      throw new TypeError(`Unexpected type '${typeof path}' in pluck operator, expected 'string'`);\n    }\n\n    props = paths.length ? [path, ...paths] : path.split('.');\n\n    /**\n     * Get property descriptor for more precise define object property\n     */\n    const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);\n\n    if (delete target[propertyKey]) {\n      Object.defineProperty(target, propertyKey, {\n        ...descriptor,\n        get() {\n          const source$ = NgrxSelect.store;\n\n          if (!source$) {\n            throw new Error('NgrxSelect not connected to store!');\n          }\n\n          return source$.pipe(pluckOperator(...props));\n        }\n      });\n    }\n  };\n}\n","import { NgModule, Injectable, SkipSelf, Optional } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n@Injectable()\nexport class NgrxSelect {\n  /**\n   * @internal\n   */\n  static store: Store<any> | undefined = undefined;\n\n  /**\n   * @internal\n   */\n  connect(store: Store<any>) {\n    NgrxSelect.store = store;\n  }\n}\n\n@NgModule({\n  providers: [NgrxSelect]\n})\nexport class NgrxSelectModule {\n  constructor(\n    ngrxSelect: NgrxSelect,\n    store: Store<any>,\n    @SkipSelf()\n    @Optional()\n    module: NgrxSelectModule\n  ) {\n    if (module) {\n      throw new Error('Only import NgrxSelectModule to top level module like AppModule');\n    }\n    ngrxSelect.connect(store);\n  }\n}\n\n@NgModule({\n  exports: [NgrxSelectModule]\n})\nexport class NgrxUtilsModule {\n  constructor(\n    @SkipSelf()\n    @Optional()\n    module: NgrxUtilsModule\n  ) {\n    if (module) {\n      throw new Error('Only import NgrxUtilsModule to top level module like AppModule');\n    }\n  }\n}\n"],"names":["NgModule","Input","ElementRef","Renderer2","Router","Directive","filter","NavigationEnd","combineLatest","untilDestroy","router","Subject","TemplateRef","ViewContainerRef","Observable","takeUntil","pluckOperator","store","SkipSelf","Optional","Store","Injectable"],"mappings":"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"}