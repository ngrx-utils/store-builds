!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("rxjs/operators"),require("rxjs/Observable")):"function"==typeof define&&define.amd?define(["exports","@angular/core","rxjs/operators","rxjs/Observable"],r):r((e.ngrxUtils=e.ngrxUtils||{},e.ngrxUtils.store={}),e.ng.core,e.operators,e.Observable)}(this,function(e,r,t,o){"use strict";var n=function(){function e(){this.workerFunctionToUrlMap=new WeakMap,this.promiseToWorkerMap=new WeakMap}return e.prototype.run=function(e,r){var t=this.getOrCreateWorkerUrl(e);return this.runUrl(t,r)},e.prototype.runUrl=function(e,r){var t=new Worker(e),o=this.createPromiseForWorker(t,r),n=this.createPromiseCleaner(o);return this.promiseToWorkerMap.set(o,t),o.then(n).catch(n),o},e.prototype.terminate=function(e){return this.removePromise(e)},e.prototype.getWorker=function(e){var r=this.promiseToWorkerMap.get(e);if(r)return r;throw new Error("Could not find Worker for promise")},e.prototype.createPromiseForWorker=function(e,r){return new Promise(function(t,o){e.addEventListener("message",function(e){return t(e.data)}),e.addEventListener("error",o),e.postMessage(r)})},e.prototype.getOrCreateWorkerUrl=function(e){if(!this.workerFunctionToUrlMap.has(e)){var r=this.createWorkerUrl(e);return this.workerFunctionToUrlMap.set(e,r),r}return this.workerFunctionToUrlMap.get(e)},e.prototype.createWorkerUrl=function(e){var r=e.toString(),t=new Blob(["\n            self.addEventListener('message', function(e) {\n                postMessage(("+r+")(e.data));\n            });\n        "],{type:"text/javascript"});return URL.createObjectURL(t)},e.prototype.createPromiseCleaner=function(e){var r=this;return function(t){return r.removePromise(e),t}},e.prototype.removePromise=function(e){var r=this.promiseToWorkerMap.get(e);return r&&r.terminate(),this.promiseToWorkerMap.delete(e),e},e}();n.decorators=[{type:r.Injectable}],n.ctorParameters=function(){return[]};var i=function(){function e(){}return e.prototype.connect=function(r){e.store=r},e}();i.store=void 0,i.decorators=[{type:r.Injectable}],i.ctorParameters=function(){return[]};var c=function(){return function(){}}();c.decorators=[{type:r.NgModule,args:[{providers:[i,n]}]}],c.ctorParameters=function(){return[]};var s=Symbol("destroy$");e.NgrxUtilsModule=c,e.NgrxSelect=i,e.Select=function(e){for(var r=[],t=1;t<arguments.length;t++)r[t-1]=arguments[t];return function(t,o){if("function"!=typeof e)throw new TypeError("Unexpected type '"+typeof e+"' in select operator, expected 'function'");var n=Object.getOwnPropertyDescriptor(t,o);delete t[o]&&Object.defineProperty(t,o,Object.assign({get:function(){var t,o=i.store;if(!o)throw new Error("NgrxSelect not connected to store!");return(t=o.select(e)).pipe.apply(t,r)}},n))}},e.Pluck=function(e){for(var r=[],o=1;o<arguments.length;o++)r[o-1]=arguments[o];return function(o,n){var c;if(e||(e=n),"string"!=typeof e)throw new TypeError("Unexpected type '"+typeof e+"' in select operator, expected 'string'");c=r.length?[e].concat(r):e.split(".");var s=Object.getOwnPropertyDescriptor(o,n);delete o[n]&&Object.defineProperty(o,n,Object.assign({get:function(){var e=i.store;if(!e)throw new Error("NgrxSelect not connected to store!");return e.pipe(t.pluck.apply(void 0,c))}},s))}},e.pluck=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return t.pluck.apply(void 0,e)},e.WebWorkerService=n,e.untilDestroy=function(e){return void 0===e[s]&&function(e){e[s]=new o.Observable(function(r){var t=e.ngOnDestroy;if(!t)throw new Error("untilDestroy operator needs the component to have an ngOnDestroy method");return e.ngOnDestroy=function(){r.next(),r.complete(),t.call(e)},function(r){return e[s]=void 0}})}(e),t.takeUntil(e[s])},Object.defineProperty(e,"__esModule",{value:!0})});