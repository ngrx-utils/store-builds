{
  "version": 3,
  "file": "ngrx-utils-store.js",
  "sources": [
    "ng://@ngrx-utils/store/projects/store/src/pipes/push.ts",
    "ng://@ngrx-utils/store/projects/store/src/directives/routerLinkMatch.ts",
    "ng://@ngrx-utils/store/projects/store/src/operators/pluck.ts",
    "ng://@ngrx-utils/store/projects/store/src/operators/untilDestroy.ts",
    "ng://@ngrx-utils/store/projects/store/src/directives/ngLet.ts",
    "ng://@ngrx-utils/store/projects/store/src/decorators/select.ts",
    "ng://@ngrx-utils/store/projects/store/src/decorators/pluck.ts",
    "ng://@ngrx-utils/store/projects/store/src/decorators/dispatch.ts",
    "ng://@ngrx-utils/store/projects/store/src/decorators/ngrx-select.ts"
  ],
  "sourcesContent": [
    "import {\n  ChangeDetectorRef,\n  EventEmitter,\n  NgModule,\n  OnDestroy,\n  Pipe,\n  PipeTransform,\n  WrappedValue,\n  ɵisObservable as isObservable,\n  ɵisPromise as isPromise\n} from '@angular/core';\nimport { Observable, SubscriptionLike } from 'rxjs';\nimport { Type, ɵstringify as stringify } from '@angular/core';\n\nexport function invalidPipeArgumentError(type: Type<any>, value: Object) {\n  return Error(`InvalidPipeArgument: '${value}' for pipe '${stringify(type)}'`);\n}\n\ninterface SubscriptionStrategy {\n  createSubscription(\n    async: Observable<any> | Promise<any>,\n    updateLatestValue: any\n  ): SubscriptionLike | Promise<any>;\n  dispose(subscription: SubscriptionLike | Promise<any>): void;\n  onDestroy(subscription: SubscriptionLike | Promise<any>): void;\n}\n\nclass ObservableStrategy implements SubscriptionStrategy {\n  createSubscription(async: Observable<any>, updateLatestValue: any): SubscriptionLike {\n    return async.subscribe({\n      next: updateLatestValue,\n      error: (e: any) => {\n        throw e;\n      }\n    });\n  }\n\n  dispose(subscription: SubscriptionLike): void {\n    subscription.unsubscribe();\n  }\n\n  onDestroy(subscription: SubscriptionLike): void {\n    subscription.unsubscribe();\n  }\n}\n\nclass PromiseStrategy implements SubscriptionStrategy {\n  createSubscription(async: Promise<any>, updateLatestValue: (v: any) => any): Promise<any> {\n    return async.then(updateLatestValue, e => {\n      throw e;\n    });\n  }\n\n  dispose(subscription: Promise<any>): void {}\n\n  onDestroy(subscription: Promise<any>): void {}\n}\n\nconst _promiseStrategy = new PromiseStrategy();\nconst _observableStrategy = new ObservableStrategy();\n\n/**\n * @ngModule PushPipeModule\n * @description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `push` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `push` pipe will run change detection and it works\n * even when `zone` has been disabled. When the component gets destroyed,\n * the `push` pipe unsubscribes automatically to avoid potential memory leaks.\n *\n */\n@Pipe({ name: 'push', pure: false })\nexport class PushPipe implements PipeTransform, OnDestroy {\n  private _latestValue: any = null;\n  private _latestReturnedValue: any = null;\n\n  private _subscription: SubscriptionLike | Promise<any> | null = null;\n  private _obj: Observable<any> | Promise<any> | EventEmitter<any> | null = null;\n  private _strategy: SubscriptionStrategy = null!;\n\n  constructor(private _ref: ChangeDetectorRef) {}\n\n  transform<T>(obj: null): null;\n  transform<T>(obj: undefined): undefined;\n  transform<T>(obj: Observable<T> | Promise<T> | null | undefined): T | null;\n  transform(obj: Observable<any> | Promise<any> | null | undefined): any {\n    if (this._obj === null) {\n      if (obj != null) {\n        this._subscribe(obj);\n      }\n      this._latestReturnedValue = this._latestValue;\n      return this._latestValue;\n    }\n\n    if (obj !== this._obj) {\n      this._dispose();\n      return this.transform(obj as any);\n    }\n\n    if (this._latestValue === this._latestReturnedValue) {\n      return this._latestReturnedValue;\n    }\n\n    this._latestReturnedValue = this._latestValue;\n    return WrappedValue.wrap(this._latestValue);\n  }\n\n  ngOnDestroy() {\n    if (this._subscription !== null) {\n      this._dispose();\n    }\n  }\n\n  private _subscribe(obj: Observable<any> | Promise<any> | EventEmitter<any>): void {\n    this._obj = obj;\n    this._strategy = this._selectStrategy(obj);\n    this._subscription = this._strategy.createSubscription(obj, (value: Object) =>\n      this._updateLatestValue(obj, value)\n    );\n  }\n\n  private _dispose(): void {\n    this._strategy.dispose(this._subscription!);\n    this._latestValue = null;\n    this._latestReturnedValue = null;\n    this._subscription = null;\n    this._obj = null;\n  }\n\n  private _selectStrategy(obj: Observable<any> | Promise<any> | EventEmitter<any>): any {\n    if (isPromise(obj)) {\n      return _promiseStrategy;\n    }\n\n    if (isObservable(obj)) {\n      return _observableStrategy;\n    }\n\n    throw invalidPipeArgumentError(PushPipe, obj);\n  }\n\n  private _updateLatestValue(async: any, value: Object): void {\n    if (async === this._obj) {\n      this._latestValue = value;\n      this._ref.detectChanges();\n    }\n  }\n}\n\n@NgModule({\n  exports: [PushPipe],\n  declarations: [PushPipe]\n})\nexport class PushPipeModule {}\n",
    "import {\n  Directive,\n  ElementRef,\n  Input,\n  NgModule,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { combineLatest, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { untilDestroy } from '../operators';\n\nexport interface MatchExp {\n  [classes: string]: string;\n}\n\n@Directive({\n  selector: '[routerLinkMatch]'\n})\nexport class RouterLinkMatch implements OnDestroy, OnChanges {\n  private _curRoute: string;\n  private _matchExp: MatchExp;\n  private _onChangesHook = new Subject<MatchExp>();\n\n  @Input('routerLinkMatch')\n  set routerLinkMatch(v: MatchExp) {\n    if (v && typeof v === 'object') {\n      this._matchExp = v;\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof v}' of value for ` +\n          `input of routerLinkMatch directive, expected 'object'`\n      );\n    }\n  }\n\n  constructor(router: Router, private _renderer: Renderer2, private _ngEl: ElementRef) {\n    combineLatest(router.events, this._onChangesHook)\n      .pipe(map(([e]) => e), filter(e => e instanceof NavigationEnd), untilDestroy(this))\n      .subscribe(e => {\n        this._curRoute = (e as NavigationEnd).urlAfterRedirects;\n\n        this._updateClass(this._matchExp);\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['routerLinkMatch']) {\n      this._onChangesHook.next(changes['routerLinkMatch'].currentValue);\n    }\n  }\n\n  private _updateClass(v: MatchExp): void {\n    Object.keys(v).forEach(cls => {\n      if (v[cls] && typeof v[cls] === 'string') {\n        const regexp = new RegExp(v[cls]);\n        if (this._curRoute.match(regexp)) {\n          this._toggleClass(cls, true);\n        } else {\n          this._toggleClass(cls, false);\n        }\n      } else {\n        throw new TypeError(\n          `Could not convert match value to Regular Expression. ` +\n            `Unexpected type '${typeof v[cls]}' for value of key '${cls}' ` +\n            `in routerLinkMatch directive match expression, expected 'non-empty string'`\n        );\n      }\n    });\n  }\n\n  private _toggleClass(classes: string, enabled: boolean): void {\n    classes = classes.trim();\n\n    classes.split(/\\s+/g).forEach(cls => {\n      if (enabled) {\n        this._renderer.addClass(this._ngEl.nativeElement, cls);\n      } else {\n        this._renderer.removeClass(this._ngEl.nativeElement, cls);\n      }\n    });\n  }\n\n  ngOnDestroy() {}\n}\n\n@NgModule({\n  declarations: [RouterLinkMatch],\n  exports: [RouterLinkMatch]\n})\nexport class RouterLinkMatchModule {}\n",
    "import { OperatorFunction } from 'rxjs';\nimport { pluck as plucker } from 'rxjs/operators';\n\n/**\n * Strong typed pluck function to replace\n * rxjs/operators/pluck\n *\n * Accept max 4 properties name\n */\nexport function pluck<A, B extends keyof A>(s1: B): OperatorFunction<A, A[B]>;\nexport function pluck<A, B extends keyof A, C extends keyof A[B]>(\n  s1: B,\n  s2: C\n): OperatorFunction<A, A[B][C]>;\nexport function pluck<A, B extends keyof A, C extends keyof A[B], D extends keyof A[B][C]>(\n  s1: B,\n  s2: C,\n  s3: D\n): OperatorFunction<A, A[B][C][D]>;\nexport function pluck<\n  A,\n  B extends keyof A,\n  C extends keyof A[B],\n  D extends keyof A[B][C],\n  E extends keyof A[B][C][D]\n>(s1: B, s2: C, s3: D, s4: E): OperatorFunction<A, A[B][C][D][E]>;\nexport function pluck<\n  A,\n  B extends keyof A,\n  C extends keyof A[B],\n  D extends keyof A[B][C],\n  E extends keyof A[B][C][D],\n  F extends keyof A[B][C][D][E]\n>(s1: B, s2: C, s3: D, s4: E, s5: F): OperatorFunction<A, A[B][C][D][E][F]>;\nexport function pluck<\n  A,\n  B extends keyof A,\n  C extends keyof A[B],\n  D extends keyof A[B][C],\n  E extends keyof A[B][C][D],\n  F extends keyof A[B][C][D][E],\n  G extends keyof A[B][C][D][E][F]\n>(s1: B, s2: C, s3: D, s4: E, s5: F, s6: G): OperatorFunction<A, A[B][C][D][E][F][G]>;\nexport function pluck<T, V>(...props: string[]): OperatorFunction<T, V>;\nexport function pluck<T, V>(...props: string[]): OperatorFunction<T, V> {\n  return plucker<T, V>(...props);\n}\n",
    "import { MonoTypeOperatorFunction, Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n// create a symbol identify the observable I add to\n// the component so it doesn't conflict with anything.\n// I need this so I'm able to add the desired behaviour to the component.\nexport const destroy$ = Symbol('destroy$');\n\n/**\n * An operator that takes until destroy it takes a components this a parameter\n * returns a pipeable RxJS operator.\n */\nexport const untilDestroy = <T>(component: any): MonoTypeOperatorFunction<T> => {\n  if (component[destroy$] === undefined) {\n    // only hookup each component once.\n    addDestroyObservableToComponent(component);\n  }\n\n  // pipe in the takeUntil destroy$ and return the source unaltered\n  return takeUntil<T>(component[destroy$]);\n};\n\n/**\n * @internal\n */\nexport function addDestroyObservableToComponent(component: any) {\n  component[destroy$] = new Observable<void>(observer => {\n    // keep track of the original destroy function,\n    // the user might do something in there\n    const orignalDestroy = component.ngOnDestroy;\n    if (orignalDestroy == null) {\n      // Angular does not support dynamic added destroy methods\n      // so make sure there is one.\n      throw new Error('untilDestroy operator needs the component to have an ngOnDestroy method');\n    }\n    // replace the ngOndestroy\n    component.ngOnDestroy = () => {\n      // fire off the destroy observable\n      observer.next();\n      // complete the observable\n      observer.complete();\n      // and at last, call the original destroy\n      orignalDestroy.call(component);\n    };\n    // return cleanup function.\n    return (_: any) => (component[destroy$] = undefined);\n  });\n}\n",
    "import { NgModule, Directive, Input, TemplateRef, ViewContainerRef, OnInit } from '@angular/core';\n\nexport class NgLetContext {\n  $implicit: any = null;\n  ngLet: any = null;\n}\n\n@Directive({\n  selector: '[ngLet]'\n})\nexport class NgLetDirective implements OnInit {\n  private _context = new NgLetContext();\n\n  @Input()\n  set ngLet(value: any) {\n    this._context.$implicit = this._context.ngLet = value;\n  }\n\n  constructor(private _vcr: ViewContainerRef, private _templateRef: TemplateRef<NgLetContext>) {}\n\n  ngOnInit() {\n    this._vcr.createEmbeddedView(this._templateRef, this._context);\n  }\n}\n\n@NgModule({\n  declarations: [NgLetDirective],\n  exports: [NgLetDirective]\n})\nexport class NgLetModule {}\n",
    "import { Selector } from '@ngrx/store';\nimport { OperatorFunction } from 'rxjs';\n\nimport { NgrxSelect } from './ngrx-select';\n\nexport function Select<A, B>(mapFn: Selector<A, B>): (target: any, name: string) => void;\nexport function Select<A, B, C>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E>(\n  mapFn: (state: A) => B,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H, I>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>,\n  op7: OperatorFunction<H, I>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H, I, J>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>,\n  op7: OperatorFunction<H, I>,\n  op8: OperatorFunction<I, J>\n): (target: any, name: string) => void;\nexport function Select<A, B, C>(\n  mapFn: Selector<A, B>,\n  ...ops: OperatorFunction<B, C>[]\n): (target: any, name: string) => void;\n\n/**\n * Select decorator act like pipe operator of Observable\n * except the first parameter is a selector to select a piece\n * of state from @ngrx/store and you won't be able to subscribe to it\n * @example\n * export class MyComponent {\n *   @Select(fromStore.getAuth, take(1))\n *   isAuth: Observable<boolean>\n * }\n */\nexport function Select<A, B>(\n  mapFn: ((state: A) => B),\n  ...operations: OperatorFunction<any, any>[]\n) {\n  return function(target: any, propertyKey: string): void {\n    if (typeof mapFn !== 'function') {\n      throw new TypeError(\n        `Unexpected type '${typeof mapFn}' in select operator, expected 'function'`\n      );\n    }\n\n    /**\n     * Get property descriptor for more precise define object property\n     */\n    const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);\n\n    if (delete target[propertyKey]) {\n      Object.defineProperty(target, propertyKey, {\n        ...descriptor,\n        get() {\n          const store = NgrxSelect.store;\n\n          if (store === null) {\n            throw new Error('NgrxSelect not connected to store!');\n          }\n\n          const source$ = store.select(mapFn);\n\n          return source$.pipe(...operations);\n        }\n      });\n    }\n  };\n}\n",
    "import { pluck as pluckOperator } from 'rxjs/operators';\n\nimport { NgrxSelect } from './ngrx-select';\n\n/**\n * @whatItDoes Provide an utility for select a piece of state from Root State.\n * @howToUse `@Pluck('state') state: Observable<any>`\n * @description Support shorthand syntax with 'dot' split property name and leave it empty\n * will use the component property name.\n * @example\n * export class MyComponent {\n *   @Pluck() prop1: Observable<any>\n *   @Pluck('feature.prop2') prop2: Observable<any>\n *   @Pluck('feature', 'prop3') prop3: Observable<any>\n * }\n */\nexport function Pluck(path?: string, ...paths: string[]) {\n  return function(target: any, propertyKey: string) {\n    let props: string[];\n\n    if (path === undefined || path === '') {\n      path = propertyKey;\n    }\n\n    if (typeof path !== 'string') {\n      throw new TypeError(`Unexpected type '${typeof path}' in pluck operator, expected 'string'`);\n    }\n\n    props = paths.length ? [path, ...paths] : path.split('.');\n\n    /**\n     * Get property descriptor for more precise define object property\n     */\n    const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);\n\n    if (delete target[propertyKey]) {\n      Object.defineProperty(target, propertyKey, {\n        ...descriptor,\n        get() {\n          const source$ = NgrxSelect.store;\n\n          if (source$ === null) {\n            throw new Error('NgrxSelect not connected to store!');\n          }\n\n          return source$.pipe(pluckOperator(...props));\n        }\n      });\n    }\n  };\n}\n",
    "import { Action, Store } from '@ngrx/store';\n\nimport { NgrxSelect } from './ngrx-select';\n\n/**\n * @whatItDoes Dispatch method returned action.\n * @howToUse `@Dispatch() componentMethod() { return new Action() }`\n */\nexport function Dispatch() {\n  return function(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value as Function;\n\n    if (typeof originalMethod !== 'function') {\n      throw new TypeError(\n        `Unexpected type ${typeof originalMethod} of property ${propertyKey}, ` +\n          `expected 'function'`\n      );\n    }\n\n    // editing the descriptor/value parameter\n    descriptor.value = function(...args: any[]) {\n      const source$ = NgrxSelect.store;\n      if (source$ === null) {\n        throw new Error('NgrxSelect not connected to store!');\n      }\n      // note usage of originalMethod here\n      const actions = originalMethod.apply(this, args);\n\n      if (Array.isArray(actions)) {\n        dispatch(source$, actions);\n      } else {\n        dispatch(source$, [actions]);\n      }\n      return actions;\n    };\n\n    // return edited descriptor as opposed to overwriting the descriptor\n    return descriptor;\n  };\n}\n\nexport function dispatch<T extends Action = Action>(source$: Store<any>, actions: T[]) {\n  actions.forEach(action => {\n    if (typeof action !== 'object' || (typeof action === 'object' && !('type' in action))) {\n      throw new TypeError(\n        `Unexpected action in method return type, expected object of type 'Action'`\n      );\n    }\n    source$.dispatch(action);\n  });\n}\n",
    "import { Injectable, NgModule } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgrxSelect {\n  static store: Store<any> | null = null;\n\n  connect(store: Store<any>) {\n    NgrxSelect.store = store;\n  }\n}\n\n@NgModule()\nexport class NgrxSelectModule {\n  constructor(ngrxSelect: NgrxSelect, store: Store<any>) {\n    if (NgrxSelect.store === null) {\n      ngrxSelect.connect(store);\n    }\n  }\n}\n"
  ],
  "names": [
    "isObservable",
    "isPromise",
    "stringify",
    "plucker",
    "pluck",
    "pluckOperator"
  ],
  "mappings": "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"
}
