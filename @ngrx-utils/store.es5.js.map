{"version":3,"file":"store.es5.js","sources":["../../../modules/store/src/pluck.ts","../../../modules/store/src/select.ts","../../../modules/store/src/module.ts"],"sourcesContent":["import { Selector, select } from '@ngrx/store';\nimport { NgrxSelect } from './module';\n\n/**\n * Provide an utility for select a piece of state from Root State.\n * Support shorthand syntax with 'dot' split property name and leave it empty\n * will use the component property name.\n * @example\n * export class MyComponent {\n *   @Select() prop1: Observable<any>\n *   @Select('feature.prop2') prop2: Observable<any>\n *   @Select('feature', 'prop3') prop3: Observable<any>\n * }\n */\nexport function Pluck<A = any, B = any>(path?: string, ...paths: string[]) {\n  return function(target: any, name: string) {\n    let fn: Selector<A, B>;\n\n    if (!path) {\n      path = name;\n    }\n\n    if (typeof path !== 'string') {\n      throw new TypeError(`Unexpected type '${typeof path}' in select operator,` + ` expected 'string'`);\n    }\n\n    fn = getPropFactory(paths.length ? [path, ...paths] : path.split('.'));\n\n    if (delete target[name]) {\n      Object.defineProperty(target, name, {\n        get: () => {\n          const source$ = NgrxSelect.store;\n\n          if (!source$) {\n            throw new Error('NgrxSelect not connected to store!');\n          }\n\n          return source$.pipe(select(fn));\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n}\n\nfunction getPropFactory(paths: string[]) {\n  return (state: { [prop: string]: any }) =>\n    paths.reduce((prev, cur) => {\n      return prev && prev[cur];\n    }, state);\n}\n","import { select, Selector } from '@ngrx/store';\nimport { OperatorFunction } from 'rxjs/interfaces';\n\nimport { NgrxSelect } from './module';\n\nexport function Select<A, B>(mapFn: Selector<A, B>): (target: any, name: string) => void;\nexport function Select<A, B, C>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E>(\n  mapFn: (state: A) => B,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H, I>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>,\n  op7: OperatorFunction<H, I>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H, I, J>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>,\n  op7: OperatorFunction<H, I>,\n  op8: OperatorFunction<I, J>\n): (target: any, name: string) => void;\n\n/**\n * Select decorator act like pipe operator of Observable\n * except the first parameter is a selector to select a piece\n * of state from @ngrx/store and you won't be able to subscribe to it\n * @example\n * export class MyComponent {\n *   @Select(fromStore.getAuth, take(1))\n *   isAuth: Observable<boolean>\n * }\n */\nexport function Select<A, B>(mapFn: ((state: A) => B), ...operations: OperatorFunction<any, any>[]) {\n  return function(target: any, name: string): void {\n    if (typeof mapFn !== 'function') {\n      throw new TypeError(`Unexpected type '${typeof mapFn}' in select operator,` + ` expected 'function'`);\n    }\n\n    if (delete target[name]) {\n      Object.defineProperty(target, name, {\n        get: () => {\n          const source$ = NgrxSelect.store;\n\n          if (!source$) {\n            throw new Error('NgrxSelect not connected to store!');\n          }\n\n          return source$.pipe(select(mapFn), ...operations);\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n}\n","import { NgModule, Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n@Injectable()\nexport class NgrxSelect {\n  /**\n   * @internal\n   */\n  static store: Store<any> | undefined = undefined;\n\n  connect(store: Store<any>) {\n    NgrxSelect.store = store;\n  }\n}\n\n@NgModule({\n  providers: [NgrxSelect]\n})\nexport class NgrxUtilsModule {}\n"],"names":[],"mappings":"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"}