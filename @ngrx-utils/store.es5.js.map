{"version":3,"file":"store.es5.js","sources":["../../../modules/store/src/ngLet.ts","../../../modules/store/src/untilDestroy.ts","../../../modules/store/src/pluck.ts","../../../modules/store/src/select.ts","../../../modules/store/src/module.ts","../../../modules/store/src/web-worker.service.ts"],"sourcesContent":["import { NgModule, Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\nexport class NgLetContext {\n  $implicit: any = null;\n  ngLet: any = null;\n}\n\n@Directive({\n  selector: '[ngLet]'\n})\nexport class NgLetDirective {\n  private _context = new NgLetContext();\n\n  @Input()\n  set ngLet(value: any) {\n    this._context.$implicit = this._context.ngLet = value;\n  }\n\n  constructor(_vcr: ViewContainerRef, _templateRef: TemplateRef<NgLetContext>) {\n    _vcr.createEmbeddedView(_templateRef, this._context);\n  }\n}\n\n@NgModule({\n  declarations: [NgLetDirective],\n  exports: [NgLetDirective]\n})\nexport class NgUtilsModule {}\n","import { Observable } from 'rxjs/Observable';\nimport { takeUntil } from 'rxjs/operators';\nimport { MonoTypeOperatorFunction } from 'rxjs/interfaces';\n\n// create a symbol identify the observable I add to\n// the component so it doesn't conflict with anything.\n// I need this so I'm able to add the desired behaviour to the component.\nexport const destroy$ = Symbol('destroy$');\n\n/**\n * an operator that takes until destroy it takes a components this a parameter\n * returns a lettable RxJS operator.\n */\nexport const untilDestroy = <T>(component: any): MonoTypeOperatorFunction<T> => {\n  if (component[destroy$] === undefined) {\n    // only hookup each component once.\n    addDestroyObservableToComponent(component);\n  }\n\n  // pipe in the takeuntil destroy$ and return the source unaltered\n  return takeUntil<T>(component[destroy$]);\n};\n\n/**\n * @internal\n */\nexport function addDestroyObservableToComponent(component: any) {\n  component[destroy$] = new Observable<void>(observer => {\n    // keep track of the original destroy function,\n    // the user might do something in there\n    const orignalDestroy = component.ngOnDestroy;\n    if (!orignalDestroy) {\n      // Angular does not support dynamic added destroy methods\n      // so make sure there is one.\n      throw new Error('untilDestroy operator needs the component to have an ngOnDestroy method');\n    }\n    // replace the ngOndestroy\n    component.ngOnDestroy = () => {\n      // fire off the destroy observable\n      observer.next();\n      // complete the observable\n      observer.complete();\n      // and at last, call the original destroy\n      orignalDestroy.call(component);\n    };\n    // return cleanup function.\n    return (_: any) => (component[destroy$] = undefined);\n  });\n}\n","import { OperatorFunction } from 'rxjs/interfaces';\nimport { pluck as pluckOperator } from 'rxjs/operators';\n\nimport { NgrxSelect } from './module';\n\n/**\n * Strong typed pluck function to replace\n * rxjs/operators/pluck\n *\n * Accept max 4 properties name\n */\nexport function pluck<A, B extends keyof A>(s1: B): OperatorFunction<A, A[B]>;\nexport function pluck<A, B extends keyof A, C extends keyof A[B]>(\n  s1: B,\n  s2: C\n): OperatorFunction<A, A[B][C]>;\nexport function pluck<A, B extends keyof A, C extends keyof A[B], D extends keyof A[B][C]>(\n  s1: B,\n  s2: C,\n  s3: D\n): OperatorFunction<A, A[B][C][D]>;\nexport function pluck<\n  A,\n  B extends keyof A,\n  C extends keyof A[B],\n  D extends keyof A[B][C],\n  E extends keyof A[B][C][D]\n>(s1: B, s2: C, s3: D, s4: E): OperatorFunction<A, A[B][C][D][E]>;\nexport function pluck<\n  A,\n  B extends keyof A,\n  C extends keyof A[B],\n  D extends keyof A[B][C],\n  E extends keyof A[B][C][D],\n  F extends keyof A[B][C][D][E]\n>(s1: B, s2: C, s3: D, s4: E, s5: F): OperatorFunction<A, A[B][C][D][E][F]>;\nexport function pluck<\n  A,\n  B extends keyof A,\n  C extends keyof A[B],\n  D extends keyof A[B][C],\n  E extends keyof A[B][C][D],\n  F extends keyof A[B][C][D][E],\n  G extends keyof A[B][C][D][E][F]\n>(s1: B, s2: C, s3: D, s4: E, s5: F, s6: G): OperatorFunction<A, A[B][C][D][E][F][G]>;\nexport function pluck<T, V>(...props: string[]): OperatorFunction<T, V> {\n  return pluckOperator<T, V>(...props);\n}\n\n/**\n * Provide an utility for select a piece of state from Root State.\n * Support shorthand syntax with 'dot' split property name and leave it empty\n * will use the component property name.\n * @example\n * export class MyComponent {\n *   @Pluck() prop1: Observable<any>\n *   @Pluck('feature.prop2') prop2: Observable<any>\n *   @Pluck('feature', 'prop3') prop3: Observable<any>\n * }\n */\nexport function Pluck(path?: string, ...paths: string[]) {\n  return function(target: any, name: string) {\n    let props: string[];\n\n    if (!path) {\n      path = name;\n    }\n\n    if (typeof path !== 'string') {\n      throw new TypeError(\n        `Unexpected type '${typeof path}' in select operator,` + ` expected 'string'`\n      );\n    }\n\n    props = paths.length ? [path, ...paths] : path.split('.');\n\n    /**\n     * Get property descriptor for more precise define object property\n     */\n    const descriptor = Object.getOwnPropertyDescriptor(target, name);\n\n    if (delete target[name]) {\n      Object.defineProperty(target, name, {\n        get() {\n          const source$ = NgrxSelect.store;\n\n          if (!source$) {\n            throw new Error('NgrxSelect not connected to store!');\n          }\n\n          return source$.pipe(pluckOperator(...props));\n        },\n        ...descriptor\n      });\n    }\n  };\n}\n","import { Selector } from '@ngrx/store';\nimport { OperatorFunction } from 'rxjs/interfaces';\n\nimport { NgrxSelect } from './module';\n\nexport function Select<A, B>(mapFn: Selector<A, B>): (target: any, name: string) => void;\nexport function Select<A, B, C>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E>(\n  mapFn: (state: A) => B,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H, I>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>,\n  op7: OperatorFunction<H, I>\n): (target: any, name: string) => void;\nexport function Select<A, B, C, D, E, F, G, H, I, J>(\n  mapFn: Selector<A, B>,\n  op1: OperatorFunction<B, C>,\n  op2: OperatorFunction<C, D>,\n  op3: OperatorFunction<D, E>,\n  op4: OperatorFunction<E, F>,\n  op5: OperatorFunction<F, G>,\n  op6: OperatorFunction<G, H>,\n  op7: OperatorFunction<H, I>,\n  op8: OperatorFunction<I, J>\n): (target: any, name: string) => void;\n\n/**\n * Select decorator act like pipe operator of Observable\n * except the first parameter is a selector to select a piece\n * of state from @ngrx/store and you won't be able to subscribe to it\n * @example\n * export class MyComponent {\n *   @Select(fromStore.getAuth, take(1))\n *   isAuth: Observable<boolean>\n * }\n */\nexport function Select<A, B>(\n  mapFn: ((state: A) => B),\n  ...operations: OperatorFunction<any, any>[]\n) {\n  return function(target: any, name: string): void {\n    if (typeof mapFn !== 'function') {\n      throw new TypeError(\n        `Unexpected type '${typeof mapFn}' in select operator,` + ` expected 'function'`\n      );\n    }\n\n    /**\n     * Get property descriptor for more precise define object property\n     */\n    const descriptor = Object.getOwnPropertyDescriptor(target, name);\n\n    if (delete target[name]) {\n      Object.defineProperty(target, name, {\n        get() {\n          const source$ = NgrxSelect.store;\n\n          if (!source$) {\n            throw new Error('NgrxSelect not connected to store!');\n          }\n\n          return source$.select(mapFn).pipe(...operations);\n        },\n        ...descriptor\n      });\n    }\n  };\n}\n","import { NgModule, Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { WebWorkerService } from './web-worker.service';\n\n@Injectable()\nexport class NgrxSelect {\n  /**\n   * @internal\n   */\n  static store: Store<any> | undefined = undefined;\n\n  /**\n   * @internal\n   */\n  connect(store: Store<any>) {\n    NgrxSelect.store = store;\n  }\n}\n\n@NgModule({\n  providers: [WebWorkerService, NgrxSelect]\n})\nexport class NgrxUtilsModule {\n  /**\n   * @internal\n   */\n  constructor(ngrxSelect: NgrxSelect, store: Store<any>) {\n    ngrxSelect.connect(store);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WebWorkerService {\n  private workerFunctionToUrlMap = new WeakMap<Function, string>();\n  private promiseToWorkerMap = new WeakMap<Promise<any>, Worker>();\n\n  run<T>(fn: (input: any) => void, data?: any): Promise<T> {\n    const url = this.getOrCreateWorkerUrl(fn);\n    return this.runUrl(url, data);\n  }\n\n  runUrl(url: string, data?: any): Promise<any> {\n    const worker = new Worker(url);\n    const promise = this.createPromiseForWorker(worker, data);\n    const promiseCleaner = this.createPromiseCleaner(promise);\n\n    this.promiseToWorkerMap.set(promise, worker);\n\n    promise.then(promiseCleaner).catch(promiseCleaner);\n\n    return promise;\n  }\n\n  terminate<T>(promise: Promise<T>): Promise<T> {\n    return this.removePromise(promise);\n  }\n\n  getWorker(promise: Promise<any>): Worker {\n    const worker = this.promiseToWorkerMap.get(promise);\n    if (worker) {\n      return worker;\n    }\n\n    throw new Error('Could not find Worker for promise');\n  }\n\n  private createPromiseForWorker<T>(worker: Worker, data: any) {\n    return new Promise<T>((resolve, reject) => {\n      worker.addEventListener('message', event => resolve(event.data));\n      worker.addEventListener('error', reject);\n      worker.postMessage(data);\n    });\n  }\n\n  private getOrCreateWorkerUrl(fn: Function): string {\n    if (!this.workerFunctionToUrlMap.has(fn)) {\n      const url = this.createWorkerUrl(fn);\n      this.workerFunctionToUrlMap.set(fn, url);\n      return url;\n    }\n    return this.workerFunctionToUrlMap.get(fn)!;\n  }\n\n  private createWorkerUrl(fn: Function): string {\n    const resolveString = fn.toString();\n    const webWorkerTemplate = `\n            self.addEventListener('message', function(e) {\n                postMessage((${resolveString})(e.data));\n            });\n        `;\n    const blob = new Blob([webWorkerTemplate], { type: 'text/javascript' });\n    return URL.createObjectURL(blob);\n  }\n\n  private createPromiseCleaner<T>(promise: Promise<T>): (input: any) => T {\n    return event => {\n      this.removePromise(promise);\n      return event;\n    };\n  }\n\n  private removePromise<T>(promise: Promise<T>): Promise<T> {\n    const worker = this.promiseToWorkerMap.get(promise);\n    if (worker) {\n      worker.terminate();\n    }\n    this.promiseToWorkerMap.delete(promise);\n    return promise;\n  }\n}\n"],"names":["pluckOperator"],"mappings":"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"}